<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAmJLR0QA/4ePzL8AAAAldEVYdGRhdGU6
        Y3JlYXRlADIwMTQtMDYtMDlUMTE6MzQ6MzQrMDg6MDAJmzyVAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDE0
        LTA2LTA5VDExOjM0OjM0KzA4OjAweMaEKQAAAE10RVh0c29mdHdhcmUASW1hZ2VNYWdpY2sgNi44Ljgt
        NyBRMTYgeDg2XzY0IDIwMTQtMDItMjggaHR0cDovL3d3dy5pbWFnZW1hZ2ljay5vcmdZpF9/AAAAGHRF
        WHRUaHVtYjo6RG9jdW1lbnQ6OlBhZ2VzADGn/7svAAAAGHRFWHRUaHVtYjo6SW1hZ2U6OkhlaWdodAA1
        MTKPjVOBAAAAF3RFWHRUaHVtYjo6SW1hZ2U6OldpZHRoADUxMhx8A9wAAAAZdEVYdFRodW1iOjpNaW1l
        dHlwZQBpbWFnZS9wbmc/slZOAAAAF3RFWHRUaHVtYjo6TVRpbWUAMTQwMjI4NDg3NA+DODcAAAATdEVY
        dFRodW1iOjpTaXplADEzLjNLQkIGTBf5AAAAYnRFWHRUaHVtYjo6VVJJAGZpbGU6Ly8vaG9tZS9mdHAv
        MTUyMC9lYXN5aWNvbi5jbi9lYXN5aWNvbi5jbi9jZG4taW1nLmVhc3lpY29uLmNuL3BuZy8xMTY4OC8x
        MTY4ODc0LnBuZzViPNoAABVxSURBVHhe7ZwJ2GdTHce1ap9R2mneQUhl3khkm6Eo6wzZsoe0MyTlSWYI
        RbJEpMhIaEF2kmWotAgjlUS8KSUt82rX/v1w/8/zn//zv/d8z/3f5bzLeZ7v85937rn3nvM7v/M7v/Uu
        tdTYbsto+JsIhwiHCu/I/l5Fv1x70tie3uToiygwXRe/JDwi/Ff4n/Cv7O9f6Pc7winCbsL6worC1Emm
        GB9MNUXTuDxbdBa+CP/R9b8IvxS+L5wq7CFs2MUUTx4fZJk4s3iXpvqoyQD9mKObKW7Rcy4UDhPeIKwk
        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
        RU5ErkJggg==
</value>
  </data>
</root>